
@inject NavigationManager navMgr

<div class="top-row pl-4 navbar navbar-dark">
    <span class="navbar-brand">Photo Import</span>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <a class="nav-link@(currentStep == string.Empty ? " active" : null)" href="">
                <span class="oi oi-home" aria-hidden="true"></span> Intro
            </a>
        </li>
        <li class="nav-item px-3">
            <a class="nav-link readonly@(currentStep == "upload" ? " active" : null)" href="javascript: void(0);">
                <span class="oi oi-cloud-upload" aria-hidden="true"></span> Upload
            </a>
        </li>
        <li class="nav-item px-3">
            <a class="nav-link readonly@(currentStep == "organize" ? " active" : null)" href="javascript: void(0);">
                <span class="oi oi-layers" aria-hidden="true"></span> Organize
            </a>
        </li>
        <li class="nav-item px-3">
            <a class="nav-link readonly@(currentStep == "complete" ? " active" : null)" href="javascript: void(0);">
                <span class="oi oi-thumb-up" aria-hidden="true"></span> Complete
            </a>
        </li>
    </ul>
</div>

@code {
    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    string currentStep;

    protected override void OnInitialized()
    {
        currentStep = navMgr.Uri.Split("/").Last();
        navMgr.LocationChanged += (e, args) =>
        {
            currentStep = args.Location.Split("/").Last();
            StateHasChanged();
        };
    }

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
